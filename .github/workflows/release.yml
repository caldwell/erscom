name: Release

on:
  push:
    tags: [ "[0-9]*" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Prepare cross compiler
      run: |
        set -x
        sudo env DEBIAN_FRONTEND=noninteractive apt install -y gcc-mingw-w64-x86-64
        rustup toolchain add nightly-2024-08-18
        rustup default nightly-2024-08-18
        rustup target add x86_64-pc-windows-gnu
        set +x

    - name: Cache Rust Crates and Objects
      uses: actions/cache@v3
      with:
        key: rust-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          rust-
        path: |
          ~/.cargo
          ./target

    - name: Build
      run: VERSION="${{ github.ref_name }}" cargo build --verbose --release --target x86_64-pc-windows-gnu

#    - name: Run tests
#      run: cargo test --verbose

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/x86_64-pc-windows-gnu/release/elden-ring-seamless-co-op-manager.exe
        asset_name: elden-ring-seamless-co-op-manager.exe
        asset_content_type: application/binary
